{"version":3,"file":"health-utils.es5.js","sources":["../src/net.ts","../src/oss.ts","../node_modules/exif-js-fix/exif.js","../src/image.ts","../src/file-types.ts","../src/index.ts"],"sourcesContent":["export interface NetOptions {\n  getToken: () => string\n  prefix?: string\n}\n\nexport interface NetFetchRequest {\n  url: string\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE'\n  body?: BodyInit | null\n}\n\nexport default class Net {\n  getToken: () => string\n  prefix: string\n\n  constructor(options: NetOptions) {\n    this.getToken = options.getToken\n    this.prefix = options.prefix || '/api'\n  }\n\n  fetch(request: NetFetchRequest) {\n    const { url, ...props } = request\n    const token = this.getToken()\n    return fetch(`${this.prefix}${url}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      ...props\n    })\n  }\n}\n","import Net from './net'\n\nexport default class OSS {\n  net: Net\n  constructor(net: Net) {\n    this.net = net\n  }\n\n  async getPolicy(ext: string = '') {\n    const query = ext ? `?ext=${ext}` : ''\n    const response = await this.net.fetch({ url: `/health/foundation/osspolicy${query}` })\n    const data = await response.json()\n    if (data.code !== 1) {\n      throw Error(`policy error: ${JSON.stringify(data)}`)\n    }\n    return data.data\n  }\n\n  async upload(file: File, policy: any) {\n    const formData = new FormData()\n    formData.append('key', policy.key)\n    formData.append('OSSAccessKeyId', policy.accessId)\n    formData.append('policy', policy.policy)\n    formData.append('Signature', policy.signature)\n    formData.append('file', file)\n    await fetch(policy.host, {\n      method: 'POST',\n      body: formData\n    })\n    return {\n      url: policy.url,\n      size: file.size,\n      type: file.type\n    }\n  }\n}\n","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (var n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","import EXIF from 'exif-js-fix'\n\nexport default class HealthImage {\n  file: File\n\n  constructor(file: File) {\n    this.file = file\n  }\n\n  async fixIOSRotate() {\n    try {\n      const orientation = await this.getTag('Orientation')\n      const image = await this.getImage()\n      const canvas = document.createElement('canvas')\n      const context = canvas.getContext('2d')!\n\n      canvas.width = image.width\n      canvas.height = image.height\n\n      console.log('File Orientation', orientation)\n      switch (Number(orientation)) {\n        case 2:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.drawImage(image, 0, 0, image.width, image.height)\n          break\n        case 3:\n          context.rotate((180 * Math.PI) / 180)\n          context.drawImage(image, -image.width, -image.height, image.width, image.height)\n          break\n        case 4:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((180 * Math.PI) / 180)\n          context.drawImage(image, -image.width, -image.height, image.width, image.height)\n          break\n        case 5:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((90 * Math.PI) / 180)\n          context.drawImage(image, 0, -image.width, image.height, image.width)\n          break\n        case 6:\n          canvas.width = image.height\n          canvas.height = image.width\n          context.rotate((90 * Math.PI) / 180)\n          context.drawImage(image, 0, 0, image.width, -image.height)\n          break\n        case 7:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((270 * Math.PI) / 180)\n          context.drawImage(image, -image.height, 0, image.height, image.width)\n          break\n        case 8:\n          context.rotate((270 * Math.PI) / 180)\n          context.drawImage(image, -image.height, 0, image.height, image.width)\n          break\n        default:\n          context.drawImage(image, 0, 0, image.width, image.height)\n      }\n\n      const dataUri = canvas.toDataURL('image/jpeg')\n      return this.dataUriToFile(dataUri)\n    } catch (err) {\n      console.error('fixIOSRotate 异常：', err)\n      return this.file\n    }\n  }\n\n  getImage(): Promise<HTMLImageElement> {\n    return new Promise(resole => {\n      const reader = new FileReader()\n      reader.readAsDataURL(this.file)\n      reader.onload = (e: any) => {\n        const image = new Image()\n        image.src = e.target.result\n        image.onload = () => {\n          resole(image)\n        }\n      }\n    })\n  }\n\n  getTag(tag: any) {\n    return new Promise(resole => {\n      EXIF.getData(this.file as any, function (this: any) {\n        resole(EXIF.getTag(this, tag))\n      })\n    })\n  }\n\n  dataUriToFile(dataUri: string) {\n    let byteString\n    if (dataUri.split(',')[0].indexOf('base64') >= 0) {\n      byteString = atob(dataUri.split(',')[1])\n    } else {\n      byteString = unescape(dataUri.split(',')[1])\n    }\n\n    // write the bytes of the string to a typed array\n    const bytes = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i += 1) {\n      bytes[i] = byteString.charCodeAt(i)\n    }\n    return new File([bytes], this.file.name, { type: 'image/jpeg' })\n  }\n}\n","export default [\n  { ext: 'jpg', type: 'image/jpeg' },\n  { ext: 'png', type: 'image/png' },\n  { ext: 'gif', type: 'image/gif' },\n  { ext: 'pdf', type: 'application/pdf' },\n  { ext: 'xls', type: 'application/vnd.ms-excel' },\n  { ext: 'xlsx', type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },\n  { ext: 'doc', type: 'application/msword' },\n  { ext: 'docx', type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' },\n  { ext: 'ppt', type: 'application/vnd.ms-powerpoint' },\n  {\n    ext: 'pptx',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n  },\n  { ext: 'amr', type: 'audio/amr' }\n]\n","import Net, { NetOptions } from './net'\nimport OSS from './oss'\nimport HeImage from './image'\nimport fileTypes from './file-types'\n\nexport interface SDKUtilsOptions extends NetOptions {}\n\nexport default class SDKUtils {\n  net: Net\n  oss: OSS\n\n  constructor(options: SDKUtilsOptions) {\n    this.net = new Net(options)\n    this.oss = new OSS(this.net)\n  }\n\n  /**\n   *\n   * @param file File 文件对象\n   * @returns data { url, size, type }\n   */\n  async upload(file: File) {\n    if (navigator.userAgent.match(/iPhone/i)) {\n      const heImage = new HeImage(file)\n      file = await heImage.fixIOSRotate()\n    }\n\n    const fileType = fileTypes.find(({ type }) => type === file.type)\n    if (!fileType) {\n      throw Error(`file type not supported: ${file.type}`)\n    }\n    const policy = await this.oss.getPolicy(fileType.ext)\n    const data = await this.oss.upload(file, policy)\n    return data\n  }\n}\n"],"names":["this","EXIF","HeImage"],"mappings":"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"}