{"version":3,"file":"health-utils.umd.js","sources":["../src/net.ts","../src/oss.ts","../node_modules/exif-js-fix/exif.js","../src/image.ts","../src/file-types.ts","../src/index.ts"],"sourcesContent":["export interface NetOptions {\n  getToken: () => string\n  prefix?: string\n}\n\nexport interface NetFetchRequest {\n  url: string\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE'\n  body?: BodyInit | null\n}\n\nexport default class Net {\n  getToken: () => string\n  prefix: string\n\n  constructor(options: NetOptions) {\n    this.getToken = options.getToken\n    this.prefix = options.prefix || '/api'\n  }\n\n  fetch(request: NetFetchRequest) {\n    const { url, ...props } = request\n    const token = this.getToken()\n    return fetch(`${this.prefix}${url}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      ...props\n    })\n  }\n}\n","import Net from './net'\n\nexport default class OSS {\n  net: Net\n  constructor(net: Net) {\n    this.net = net\n  }\n\n  async getPolicy(ext: string = '') {\n    const query = ext ? `?ext=${ext}` : ''\n    const response = await this.net.fetch({ url: `/health/foundation/osspolicy${query}` })\n    const data = await response.json()\n    if (data.code !== 1) {\n      throw Error(`policy error: ${JSON.stringify(data)}`)\n    }\n    return data.data\n  }\n\n  async upload(file: File, policy: any) {\n    const formData = new FormData()\n    formData.append('key', policy.key)\n    formData.append('OSSAccessKeyId', policy.accessId)\n    formData.append('policy', policy.policy)\n    formData.append('Signature', policy.signature)\n    formData.append('file', file)\n    await fetch(policy.host, {\n      method: 'POST',\n      body: formData\n    })\n    return {\n      url: policy.url,\n      size: file.size,\n      type: file.type\n    }\n  }\n}\n","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (var n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","import EXIF from 'exif-js-fix'\n\nexport default class HealthImage {\n  file: File\n\n  constructor(file: File) {\n    this.file = file\n  }\n\n  async fixIOSRotate() {\n    try {\n      const orientation = await this.getTag('Orientation')\n      const image = await this.getImage()\n      const canvas = document.createElement('canvas')\n      const context = canvas.getContext('2d')!\n\n      canvas.width = image.width\n      canvas.height = image.height\n\n      console.log('File Orientation', orientation)\n      switch (Number(orientation)) {\n        case 2:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.drawImage(image, 0, 0, image.width, image.height)\n          break\n        case 3:\n          context.rotate((180 * Math.PI) / 180)\n          context.drawImage(image, -image.width, -image.height, image.width, image.height)\n          break\n        case 4:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((180 * Math.PI) / 180)\n          context.drawImage(image, -image.width, -image.height, image.width, image.height)\n          break\n        case 5:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((90 * Math.PI) / 180)\n          context.drawImage(image, 0, -image.width, image.height, image.width)\n          break\n        case 6:\n          canvas.width = image.height\n          canvas.height = image.width\n          context.rotate((90 * Math.PI) / 180)\n          context.drawImage(image, 0, 0, image.width, -image.height)\n          break\n        case 7:\n          context.translate(image.width, 0)\n          context.scale(-1, 1)\n          context.rotate((270 * Math.PI) / 180)\n          context.drawImage(image, -image.height, 0, image.height, image.width)\n          break\n        case 8:\n          context.rotate((270 * Math.PI) / 180)\n          context.drawImage(image, -image.height, 0, image.height, image.width)\n          break\n        default:\n          context.drawImage(image, 0, 0, image.width, image.height)\n      }\n\n      const dataUri = canvas.toDataURL('image/jpeg')\n      return this.dataUriToFile(dataUri)\n    } catch (err) {\n      console.error('fixIOSRotate 异常：', err)\n      return this.file\n    }\n  }\n\n  getImage(): Promise<HTMLImageElement> {\n    return new Promise(resole => {\n      const reader = new FileReader()\n      reader.readAsDataURL(this.file)\n      reader.onload = (e: any) => {\n        const image = new Image()\n        image.src = e.target.result\n        image.onload = () => {\n          resole(image)\n        }\n      }\n    })\n  }\n\n  getTag(tag: any) {\n    return new Promise(resole => {\n      EXIF.getData(this.file as any, function (this: any) {\n        resole(EXIF.getTag(this, tag))\n      })\n    })\n  }\n\n  dataUriToFile(dataUri: string) {\n    let byteString\n    if (dataUri.split(',')[0].indexOf('base64') >= 0) {\n      byteString = atob(dataUri.split(',')[1])\n    } else {\n      byteString = unescape(dataUri.split(',')[1])\n    }\n\n    // write the bytes of the string to a typed array\n    const bytes = new Uint8Array(byteString.length)\n    for (let i = 0; i < byteString.length; i += 1) {\n      bytes[i] = byteString.charCodeAt(i)\n    }\n    return new File([bytes], this.file.name, { type: 'image/jpeg' })\n  }\n}\n","export default [\n  { ext: 'jpg', type: 'image/jpeg' },\n  { ext: 'png', type: 'image/png' },\n  { ext: 'gif', type: 'image/gif' },\n  { ext: 'pdf', type: 'application/pdf' },\n  { ext: 'xls', type: 'application/vnd.ms-excel' },\n  { ext: 'xlsx', type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' },\n  { ext: 'doc', type: 'application/msword' },\n  { ext: 'docx', type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' },\n  { ext: 'ppt', type: 'application/vnd.ms-powerpoint' },\n  {\n    ext: 'pptx',\n    type: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n  },\n  { ext: 'amr', type: 'audio/amr' }\n]\n","import Net, { NetOptions } from './net'\nimport OSS from './oss'\nimport HeImage from './image'\nimport fileTypes from './file-types'\n\nexport interface SDKUtilsOptions extends NetOptions {}\n\nexport default class SDKUtils {\n  net: Net\n  oss: OSS\n\n  constructor(options: SDKUtilsOptions) {\n    this.net = new Net(options)\n    this.oss = new OSS(this.net)\n  }\n\n  /**\n   *\n   * @param file File 文件对象\n   * @returns data { url, size, type }\n   */\n  async upload(file: File) {\n    if (navigator.userAgent.match(/iPhone/i)) {\n      const heImage = new HeImage(file)\n      file = await heImage.fixIOSRotate()\n    }\n\n    const fileType = fileTypes.find(({ type }) => type === file.type)\n    if (!fileType) {\n      throw Error(`file type not supported: ${file.type}`)\n    }\n    const policy = await this.oss.getPolicy(fileType.ext)\n    const data = await this.oss.upload(file, policy)\n    return data\n  }\n}\n"],"names":["this","EXIF","HeImage"],"mappings":"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"}